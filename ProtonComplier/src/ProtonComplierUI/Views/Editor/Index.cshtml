@model EditorViewModel

@{
    ViewData["Title"] = "Editor";
}

@section EditorBar {
    @await Html.PartialAsync("EditorBar")
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="tempErrorMessage" class="error-banner">
        @TempData["ErrorMessage"]
    </div>
}

<section class="DocuBodyEditor">
    <!-- Main content with Monaco Editor Panels -->
    <div class="wrapper">
        <div id="editor-container" class="box">
            <div id="editor-inner"></div>
        </div>
        <div class="handler"></div>
        <div class="right-container box">
            <!-- Right container with two inner rows -->
            <div id="right-editor-container" class="row">
                <div id="right-editor-inner"></div>
            </div>
            <div id="consolePanel" class="alert-secondary row">
                <span id="compilerOutput">
                    @if (!string.IsNullOrEmpty(Model.ConsoleMessage))
                    {
                        <span>@Model.ConsoleMessage </span>
                        <br />
                    }
                    <span id="blinkingArrow">ProtonCompiler >> </span>
                </span>
            </div>
        </div>
    </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    // Serialize values from Razor into global JS variables
    window.editorInputText = @Html.Raw(Json.Serialize(Model.InputText));
    window.outputText = @Html.Raw(Json.Serialize(Model.OutputText ?? "No output"));
</script>